<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.inboundV2.mapper.ShipInboundShipmentV2Mapper">
	<resultMap id="BaseResultMap" type="com.wimoor.amazon.inboundV2.pojo.entity.ShipInboundShipment">
		<id column="ShipmentId" property="shipmentid" jdbcType="CHAR" />
		<result column="DestinationFulfillmentCenterId" property="destinationfulfillmentcenterid" jdbcType="CHAR" />
		<result column="ShipToAddressID" property="shiptoaddressid" jdbcType="CHAR" />
		<result column="LabelPrepType" property="labelpreptype" jdbcType="CHAR" />
		<result column="ShipmentStatus" property="shipmentstatus" jdbcType="CHAR" />
		<result column="inboundplanid" property="inboundplanid" jdbcType="CHAR" />
		<result column="name" property="name" jdbcType="CHAR" />
		<result column="status" property="status" jdbcType="CHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		ShipmentId, DestinationFulfillmentCenterId, ShipToAddressID, LabelPrepType,
		ShipmentStatus, inboundplanid,name,status
	</sql>
	<select id="findByTraceConditionCenter" resultType="java.util.Map" parameterType="com.wimoor.amazon.inbound.pojo.dto.ShipInboundShipmenSummaryDTO">
			select 
				 inbound.destination  centerId,
				 count(0) num
			from t_erp_ship_v2_inboundshipment inbound
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=inbound.shipmentid
			left join t_erp_ship_status stat on stat.`status`=inbound.ShipmentStatus
			left join t_erp_ship_v2_destination_address ad on ad.code=inbound.destination
			left join t_erp_ship_v2_inboundplan form on form.id=inbound.formid
			left join t_erp_ship_transdetail detail on detail.id = trans.channel
			left join t_erp_ship_transcompany c on c.id=detail.company
			left join t_erp_ship_inboundshipment_traceupload tu on tu.shipmentid=inbound.shipmentid
			left join t_marketplace mp on mp.marketplaceid=form.marketplaceid
			left join t_erp_warehouse_fba rt on rt.shopid=form.shopid and (rt.marketplaceid=mp.region or rt.marketplaceid=mp.marketplaceId)
			left join t_amazon_group ag on ag.id=form.groupid
			left join t_erp_warehouse w on form.warehouseid=w.id and w.shopid=form.shopid
			left join t_erp_transtype ty on ty.id=detail.transtype
			where form.shopid=#{param.shopid,jdbcType=CHAR} 
			<if test="param.groupList !=null">
			and form.groupid in(
			<foreach collection="param.groupList" item="groupid" index="index" separator=",">
				#{groupid,jdbcType=CHAR} 
			</foreach>
			)
		</if> 
		    <if test="param.fbacenter !=null">
				and inbound.destination =#{param.fbacenter,jdbcType=CHAR} 
			</if>
			<if test="param.checkinv !=null">
				and inbound.check_inv =#{param.checkinv,jdbcType=CHAR} 
			</if>
			 
			<if test="param.enddate!=null">
				and  form.createtime &gt;= #{param.fromdate,jdbcType=TIMESTAMP}
				and  form.createtime &lt;= #{param.enddate,jdbcType=TIMESTAMP}
			</if>
			<if test="param.marketplaceid!=null and param.marketplaceid!=''">
				and form.marketplaceid = #{param.marketplaceid,jdbcType=CHAR}
			</if>
			<if test="param.groupid!=null  and param.groupid!=''">
				and form.groupid= #{param.groupid,jdbcType=CHAR}
			</if>
			<if test="param.warehouseid!=null and param.warehouseid!=''">
				and w.id= #{param.warehouseid,jdbcType=CHAR}
			</if>
			 <if test="param.company != null and param.company!=''">
				and trans.company = #{param.company,jdbcType=CHAR}
			</if>
		    <if test="param.channel != null and param.channel!=''">
				and trans.channel = #{param.channel,jdbcType=CHAR}
			</if>
			<if test="param.transtype!=null and param.transtype!=''">
		   		and ty.id=#{param.transtype,jdbcType=CHAR}
		   	</if>
			 <if test="param.search != null and param.search!=''">
			    <if test="param.searchtype == 'number'"> 
			       and (inbound.ShipmentId like #{param.search,jdbcType=CHAR})
			   	</if>
		 	    <if test="param.searchtype == 'remark'">
			         and inbound.remark like #{param.search,jdbcType=CHAR}
			   	</if>
			    <if test="param.searchtype == 'formnumber'">
			         and form.number like #{param.search,jdbcType=CHAR}
			   	</if>
			   	 <if test="param.searchtype == 'name'">
			         and inbound.name like #{param.search,jdbcType=CHAR}
			   	</if>
		    </if>
		    <if test="param.hasexceptionnum != null">
		         and (
		               (inbound.ignorerec=0 and stat.`status`='WORKING' and inbound.status>=5 )
		               or 
		               (inbound.ignorerec=0 and stat.`status`!='WORKING' and inbound.status&lt;5 and inbound.status>0)
		             )
		   </if>
			group by inbound.destination
	</select>
	
	<select id="findByTraceCondition" resultType="com.wimoor.amazon.inbound.pojo.vo.ShipInboundShipmenSummarytVo" parameterType="com.wimoor.amazon.inbound.pojo.dto.ShipInboundShipmenSummaryDTO">
		select V.*,(SELECT group_CONCAT(DISTINCT t.tracking_id) FROM t_erp_ship_v2_inboundshipment_box t
					WHERE t.shipmentid=V.reallyShipmentid) tracknumber 
		from (
			select 
			    inbound.shipmentid reallyShipmentid, 
			    max(inbound.shipment_confirmation_id) shipmentid ,
			    max(inbound.name) name , 
			    max(inbound.referenceid) referenceid,
			    max(form.id) planid,
		        max(form.id) id,
				max(form.marketplaceid) marketplaceid,
				max(form.auditstatus) auditstatus,
		        max(form.auditime) auditime,
				false areCasesRequired,
				max(mp.market) countryCode ,
				count(item.msku) skuamount, 
				sum(item.quantity) sumQuantity,
				max(inbound.destination) centerId,
				sum(ifnull(item.quantity,0)) sumshipped, 
				sum(ifnull(item.received,0)) sumrec,
				max(detail.channame) channame,
				max(detail.id) channelid,  
				max(form.createtime) createdate, 
				max(w.name) warehouse,
				max(mp.name) country, 
				max(inbound.shipmentstatus) shipmentstatus,
				max(mp.market) market,
				max(ag.name) groupname,
				max(form.transtyle) transtyle,
				max(trans.transtype) transtype,
				max(inbound.status) status,
				max(ifnull(inbound.remark,form.remark)) remark,
				max(date_add(trans.arrivalTime,INTERVAL ifnull(rt.put_on_days,0) DAY)) shopdate,
				max(trans.arrivalTime) arrivalTime, 
				max(stat.`status`) shipstatus,
				max(case when item.msku like ifnull(#{param.search,jdbcType=CHAR},'') then 1 else 0 end) hassku ,
				max(inbound.start_receive_date) receivedate,
				max(0) syncinv,
				max(form.number) number,
				max(c.name) company,
				max(c.id) companyid,
				max(ty.name) transtypename,
				max(trans.ordernum) ordernum,
				max(form.warehouseid) warehouseid,
				max(form.groupid) groupid,
				max(tu.`status`) traceupstatus,
				max(form.check_inv) checkinv,
				max(inbound.boxtime) boxtime,
				max(inbound.refreshtime) refreshtime,
				max(inbound.shiped_date) shipedDate,
				max(inbound.start_receive_date) startReceiveDate,
				max(tyd.day) transday,
				max(delivery.start_date) deliveryStart,
				max(delivery.end_date) deliveryEnd,
				max(delivery.editable_until) deliveryUntil,
				max(inbound.transaction_name) transactionName,
				max(inbound.isquote) isquote
			from t_erp_ship_v2_inboundshipment inbound
			left join t_erp_ship_v2_inboundshipment_delivery delivery on delivery.delivery_window_option_id=inbound.delivery_window_option_id
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=inbound.shipment_confirmation_id
			left join t_erp_ship_status stat on stat.`status`=inbound.ShipmentStatus
			left join t_erp_ship_v2_destination_address ad on ad.code=inbound.destination
			left join t_erp_ship_v2_inboundshipment_item item on item.shipmentid=inbound.shipmentid
			left join t_erp_ship_v2_inboundplan form on form.id=inbound.formid
			left join t_erp_ship_transdetail detail on detail.id = trans.channel
			left join t_erp_ship_transcompany c on c.id=detail.company
			left join t_erp_ship_inboundshipment_traceupload tu on tu.shipmentid=inbound.shipment_confirmation_id
			left join t_marketplace mp on mp.marketplaceid=form.marketplaceid
			left join t_erp_warehouse_fba rt on rt.shopid=form.shopid and (rt.marketplaceid=mp.region or rt.marketplaceid=mp.marketplaceId)
			left join t_amazon_group ag on ag.id=form.groupid
			left join t_erp_warehouse w on form.warehouseid=w.id and w.shopid=form.shopid
			left join t_erp_transtype ty on ty.id=detail.transtype
			left join t_erp_ship_transtype_day tyd on tyd.transtypeid=ty.id and tyd.shopid=form.shopid
			where form.shopid=#{param.shopid,jdbcType=CHAR} 
			<if test="param.groupList !=null">
			and form.groupid in(
			<foreach collection="param.groupList" item="groupid" index="index" separator=",">
				#{groupid,jdbcType=CHAR} 
			</foreach>
			)
		    </if>
			<if test="param.hasexceptionnum != null">
				and (
				(inbound.ignorerec=0 and stat.`status`='WORKING' and inbound.status>=5 )
				or
				(inbound.ignorerec=0 and stat.`status`!='WORKING' and inbound.status&lt;5 and inbound.status>0)
				or
			    (stat.`status`='CLOSED' and ifnull(item.quantity,0)-ifnull(item.received,0)>=10)
				)
			</if>
			<if test="param.shipmentstatus !=null">
				and inbound.shipmentstatus =#{param.shipmentstatus,jdbcType=CHAR}
			</if>
			<if test="param.auditstatus!=null">
				and inbound.status=#{param.auditstatus,jdbcType=CHAR}
			</if>
		    <if test="param.formid">
		        and inbound.formid=#{param.formid,jdbcType=CHAR}
		    </if>
		    <if test="param.fbacenter !=null">
				and inbound.destination =#{param.fbacenter,jdbcType=CHAR} 
			</if>
			<if test="param.checkinv !=null">
				and form.check_inv =#{param.checkinv,jdbcType=CHAR} 
			</if>
			<if test="param.enddate!=null">
				and  form.createtime &gt;= #{param.fromdate,jdbcType=TIMESTAMP}
				and  form.createtime &lt;= #{param.enddate,jdbcType=TIMESTAMP}
			</if>
			<if test="param.marketplaceid!=null and param.marketplaceid!=''">
				and form.marketplaceid = #{param.marketplaceid,jdbcType=CHAR}
			</if>
			<if test="param.groupid!=null  and param.groupid!=''">
				and form.groupid= #{param.groupid,jdbcType=CHAR}
			</if>
			<if test="param.warehouseid!=null and param.warehouseid!=''">
				and w.id= #{param.warehouseid,jdbcType=CHAR}
			</if>
			 <if test="param.company != null and param.company!=''">
				and trans.company = #{param.company,jdbcType=CHAR}
			</if>
		    <if test="param.channel != null and param.channel!=''">
				and trans.channel = #{param.channel,jdbcType=CHAR}
			</if>
			<if test="param.transtype!=null and param.transtype!=''">
		   		and ty.id=#{param.transtype,jdbcType=CHAR}
		   	</if>
			 <if test="param.search != null and param.search!=''">
			    <if test="param.searchtype == 'number'"> 
			       and (inbound.shipment_confirmation_id like #{param.search,jdbcType=CHAR})
			   	</if>
		 	    <if test="param.searchtype == 'remark'">
			         and ifnull(inbound.remark,form.remark) like #{param.search,jdbcType=CHAR}
			   	</if>
			    <if test="param.searchtype == 'formnumber'">
			         and form.number like #{param.search,jdbcType=CHAR}
			   	</if>
			   	 <if test="param.searchtype == 'name'">
			         and inbound.name like #{param.search,jdbcType=CHAR}
			   	</if>
				 <if test="param.searchtype == 'centerid'">
					 and inbound.destination like #{param.search,jdbcType=CHAR}
				 </if>
		    </if>
			group by inbound.shipmentid
		) V where 1=1
		<if test="param.search != null">
		   
		   	<if test="param.searchtype == 'sku'">
		    and	hassku=1
		   	</if>

		</if>
	</select>
	
	<select id="findCarrierByshipmentid" resultType="java.lang.String" parameterType="java.lang.String">
		select name 
		from t_erp_ship_config_carrier
		where country =#{country,jdbcType=CHAR} 
			and transtyle =#{transtyle,jdbcType=CHAR}
	</select>

    <select id="findProblemShip" resultType="java.util.Map" parameterType="java.lang.String">
    SELECT p.shopid,s.ShipmentId , 0 isover,s.refreshtime
    from t_erp_ship_inboundshipment s
    LEFT JOIN t_erp_ship_inboundplan p ON p.id=s.inboundplanid
    WHERE   shipmentstatus IN ('IN_TRANSIT','RECEIVING','SHIPPED','WORKING') 
        and STATUS&lt;5
        and s.sync_inv in (1,2)
        and ifnull(refreshtime,'1991-01-01') &lt; curdate()
	 	and p.amazongroupid= #{amazongroupid,jdbcType=CHAR}
		and p.marketplaceid=#{marketplaceid,jdbcType=CHAR}
    </select>
	<select id="findAllShiped" resultType="java.util.Map" parameterType="java.lang.String">
		select pl.shopid,sm.ShipmentId , 0 isover,sm.refreshtime
		from t_erp_ship_inboundshipment sm
		left join t_erp_ship_inboundplan pl on sm.inboundplanid=pl.id
		where pl.id is not null 
			and (ifnull(refreshtime,'1991-01-01') &lt; curdate() or pl.createdate>curdate())
			and (sm.`status`=5 or (sm.`status`&lt;5 and sm.sync_inv=1))
			and pl.amazongroupid= #{amazongroupid,jdbcType=CHAR}
			and pl.marketplaceid=#{marketplaceid,jdbcType=CHAR}
		union
		select pl.shopid,ship.ShipmentId,1 isover,ship.refreshtime
		from  t_erp_ship_inboundshipment ship
		left join t_erp_ship_inbounditem item  on item.ShipmentId=ship.ShipmentId
		left join t_erp_ship_inboundplan pl on ship.inboundplanid=pl.id
		where ship.`status`=6 
	        and (ship.refreshtime &lt; curdate() or pl.createdate>curdate())
			and ship.shiped_date>DATE_ADD(CURDATE(), INTERVAL -60 DAY)
			and pl.amazongroupid= #{amazongroupid,jdbcType=CHAR}
			and pl.marketplaceid=#{marketplaceid,jdbcType=CHAR}
		group by pl.amazongroupid,pl.marketplaceid,pl.shopid,ship.ShipmentId
        having sum(ifnull(item.QuantityShipped,1)!=ifnull(item.QuantityReceived,0)) >0
		order by isover,refreshtime limit 49
	</select>

	<select id="findLabelByshipmentid" resultType="java.util.Map" parameterType="java.lang.String">
		select 
		     item.SellerSKU sku, 
		     item.FulfillmentNetworkSKU fnsku,
			 item.QuantityShipped quantity, 
			 pd.name title , 
			 mp.market country,
			 item.ShipmentId code
		from t_erp_ship_inbounditem item
		left join t_erp_ship_inboundplan p on p.id=item.inboundplanid
		left join t_marketplace mp on mp.marketplaceId=p.marketplaceid
		left join t_amazon_auth auth on auth.groupid=p.amazongroupid and auth.shop_id=p.shopid and auth.aws_region=mp.aws_region
		left join t_product_info pd on pd.sku=item.SellerSKU and pd.marketplaceid=p.marketplaceid and pd.amazonauthid=auth.id
		where p.shopid=#{shopid,jdbcType=CHAR} 
			and item.ShipmentId= #{shipmentid,jdbcType=CHAR}
			order by item.SellerSKU
	</select>

	<select id="findBoxDetailByShipmentId" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
		select ca.sku sku,ca.quantity skunum,ca.boxid , box.weight weight,
			box.length length,box.width width,box.height height
		from t_erp_ship_v2_inboundshipment_boxitem ca
		left join t_erp_ship_v2_inboundshipment_box box on box.id=ca.boxid
		where box.shipmentid=#{shipmentid,jdbcType=CHAR}
		order by sku,boxid
	</select>
	<select id="findBoxByShipmentId" resultType="java.util.LinkedHashMap" parameterType="java.lang.String">
		select box.id boxid,box.boxnum , box.weight weight,
			   box.length length,box.width width,box.height height
		from t_erp_ship_v2_inboundshipment_box box
		where box.shipmentid=#{shipmentid,jdbcType=CHAR}
		order by boxid
	</select>
	
	<select id="findToCountry"  resultType="java.util.Map" parameterType="java.lang.String">
	        SELECT country,m.marketplaceId from t_amz_ship_fulfillment_center c 
			LEFT JOIN t_marketplace m ON m.market=c.country
			WHERE c.code=#{destinationFulfillmentCenterId,jdbcType=CHAR}
			 <if test="region!=null">
			     AND m.region=#{region,jdbcType=CHAR}
			  </if>
			limit 1;
    </select>

	<!-- 所有的authid都是kuuqa-us的。。8c8523f6-ab15-11e6-bab5-00e04c023f0e 本来是auth.id=pd.amazonAuthId -->
	<select id="findLabelBySku" resultType="java.util.Map" parameterType="java.util.Map">
		select pd.sku sku, ir.fnsku fnsku, 0 quantity, pd.name title ,mp.market country
		from t_product_info pd
		left join t_marketplace mp on mp.marketplaceId=pd.marketplaceid
		left join t_amazon_auth auth on auth.id=pd.amazonAuthId and auth.shop_id=#{shopid,jdbcType=CHAR}
		left join t_inventory_report ir on ir.sku=pd.sku and ir.amazonAuthId=auth.id 
			and ir.marketplaceid=case when mp.region='EU' then 'EU' else pd.marketplaceid end
		where auth.id is not null
			and pd.marketplaceid=#{marketplace,jdbcType=CHAR}
			and auth.groupid=#{groupid,jdbcType=CHAR}
		<if test="skuList!=null">
			and(
			<foreach collection="skuList" item="sku" index="sku_list" open="(" separator="or" close=")">
				pd.sku=#{sku,jdbcType=CHAR}
			</foreach>
			)
		</if>
	</select>

	<select id="selectBySellerSku" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT s.* from t_erp_ship_inboundplan p
		left join t_erp_ship_inbounditem i on i.inboundplanid=p.id
		left join t_erp_ship_inboundshipment s on p.id=s.inboundplanid
		where p.shopid=#{shopid,jdbcType=CHAR} 
			and i.SellerSKU=#{sku,jdbcType=CHAR}
			
	</select>
	<select id="selectBySellerSkuMarket" resultMap="BaseResultMap" parameterType="java.lang.String">
			SELECT s.* from t_erp_ship_inboundplan p
		    left join t_erp_ship_inbounditem i on i.inboundplanid=p.id
		    left join t_erp_ship_inboundshipment s on p.id=s.inboundplanid
		    where p.shopid=#{shopid,jdbcType=CHAR} 
			and i.SellerSKU=#{sku,jdbcType=CHAR}
			and p.marketplaceid=#{marketplaceid,jdbcType=CHAR}
	</select>

   <select id="listRefreshShipment"  resultType="com.wimoor.amazon.inboundV2.pojo.entity.ShipInboundShipment" parameterType="java.lang.String">
	   SELECT s.* from t_erp_ship_v2_inboundplan p
	   left join t_erp_ship_v2_inboundshipment s on p.id=s.formid
	   where  p.amazonauthid=#{amazonauthId,jdbcType=CHAR}
	   and (IFNULL(s.refreshtime,'1991-01-01') &lt; curdate() OR p.createtime>curdate())
	   and (s.`status`=7 or (s.`status` &lt; 7 and s.sync_inv=1))
	   order by s.refreshtime asc,p.createtime asc,p.createtime asc limit 10
   </select>
</mapper>