/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.amazon.spapi.model.fulfillmentinbound;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Pallet information, including weight, dimensions, quantity, stackability, freight class, and declared value.
 */
@ApiModel(description = "Pallet information, including weight, dimensions, quantity, stackability, freight class, and declared value.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-04-03T09:34:42.612+08:00")
public class PalletInformation {
  @SerializedName("declaredValue")
  private Currency declaredValue = null;

  @SerializedName("freightClass")
  private String freightClass = null;

  @SerializedName("pallets")
  private List<PalletInput> pallets = new ArrayList<PalletInput>();

  public PalletInformation declaredValue(Currency declaredValue) {
    this.declaredValue = declaredValue;
    return this;
  }

   /**
   * Get declaredValue
   * @return declaredValue
  **/
  @ApiModelProperty(value = "")
  public Currency getDeclaredValue() {
    return declaredValue;
  }

  public void setDeclaredValue(Currency declaredValue) {
    this.declaredValue = declaredValue;
  }

  public PalletInformation freightClass(String freightClass) {
    this.freightClass = freightClass;
    return this;
  }

   /**
   * Freight class. Can be &#x60;NONE&#x60;, &#x60;FC_50&#x60;, &#x60;FC_55&#x60;, &#x60;FC_60&#x60;, &#x60;FC_65&#x60;, &#x60;FC_70&#x60;, &#x60;FC_77_5&#x60;, &#x60;FC_85&#x60;, &#x60;FC_92_5&#x60;, &#x60;FC_100&#x60;, &#x60;FC_110&#x60;, &#x60;FC_125&#x60;, &#x60;FC_150&#x60;, &#x60;FC_175&#x60;, &#x60;FC_200&#x60;, &#x60;FC_250&#x60;, &#x60;FC_300&#x60;, &#x60;FC_400&#x60;, or &#x60;FC_500&#x60;.
   * @return freightClass
  **/
  @ApiModelProperty(value = "Freight class. Can be `NONE`, `FC_50`, `FC_55`, `FC_60`, `FC_65`, `FC_70`, `FC_77_5`, `FC_85`, `FC_92_5`, `FC_100`, `FC_110`, `FC_125`, `FC_150`, `FC_175`, `FC_200`, `FC_250`, `FC_300`, `FC_400`, or `FC_500`.")
  public String getFreightClass() {
    return freightClass;
  }

  public void setFreightClass(String freightClass) {
    this.freightClass = freightClass;
  }

  public PalletInformation pallets(List<PalletInput> pallets) {
    this.pallets = pallets;
    return this;
  }

  public PalletInformation addPalletsItem(PalletInput palletsItem) {
    this.pallets.add(palletsItem);
    return this;
  }

   /**
   * Set pallet configuration for Less-Than-Truckload (LTL).
   * @return pallets
  **/
  @ApiModelProperty(required = true, value = "Set pallet configuration for Less-Than-Truckload (LTL).")
  public List<PalletInput> getPallets() {
    return pallets;
  }

  public void setPallets(List<PalletInput> pallets) {
    this.pallets = pallets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PalletInformation palletInformation = (PalletInformation) o;
    return Objects.equals(this.declaredValue, palletInformation.declaredValue) &&
        Objects.equals(this.freightClass, palletInformation.freightClass) &&
        Objects.equals(this.pallets, palletInformation.pallets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(declaredValue, freightClass, pallets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PalletInformation {\n");
    
    sb.append("    declaredValue: ").append(toIndentedString(declaredValue)).append("\n");
    sb.append("    freightClass: ").append(toIndentedString(freightClass)).append("\n");
    sb.append("    pallets: ").append(toIndentedString(pallets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

